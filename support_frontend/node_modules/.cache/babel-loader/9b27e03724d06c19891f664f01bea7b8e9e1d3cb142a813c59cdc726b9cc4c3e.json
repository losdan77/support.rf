{"ast":null,"code":"import{useState}from\"react\";export const useFetching=callback=>{const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const fetching=async()=>{try{setIsLoading(true);await callback();}catch(e){setError(e.message);}finally{setIsLoading(false);}};return[fetching,isLoading,error];};","map":{"version":3,"names":["useState","useFetching","callback","isLoading","setIsLoading","error","setError","fetching","e","message"],"sources":["/home/los/Рабочий стол/Проги/support.rf/support_frontend/src/hooks/useFetching.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetching = async () => {\n        try {\n            setIsLoading(true);\n            await callback();\n        } catch (e) {\n            setError(e.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return [fetching, isLoading, error]\n}"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,WAAW,CAAIC,QAAQ,EAAK,CACrC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAO,QAAQ,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACAH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAF,QAAQ,CAAC,CAAC,CACpB,CAAE,MAAOM,CAAC,CAAE,CACRF,QAAQ,CAACE,CAAC,CAACC,OAAO,CAAC,CACvB,CAAC,OAAS,CACNL,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,MAAO,CAACG,QAAQ,CAAEJ,SAAS,CAAEE,KAAK,CAAC,CACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}