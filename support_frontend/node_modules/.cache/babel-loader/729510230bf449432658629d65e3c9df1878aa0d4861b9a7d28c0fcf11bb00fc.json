{"ast":null,"code":"import axios from\"axios\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"../styles/DontRememberPassword.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DontRememberPassword=()=>{const API_URL=process.env.REACT_APP_API_URL;const[emailData,setEmailData]=useState(\"\");const navigate=useNavigate();async function recoveryPassword(e){e.preventDefault();const email=emailData;try{await axios.post(`${API_URL}/organizations/dont_remember_password?email=${email}`);navigate(\"/verify_recovery_password_code\",{state:{email}});}catch(error){if(error.status===404){alert(\"Пользователя с таким адресом не существует\");}else{alert(\"Ошибка сервера. Попробуйте позже\");}}setEmailData(\"\");}return/*#__PURE__*/_jsx(\"div\",{className:\"dontRememberPasswordPage\",children:/*#__PURE__*/_jsx(\"div\",{className:\"dontRememberPasswordForm\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"exampleInputEmail1\",className:\"form-label\",children:\"Email \\u0430\\u0434\\u0440\\u0435\\u0441\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",id:\"exampleInputEmail1\",\"aria-describedby\":\"emailHelp\",value:emailData,onChange:e=>setEmailData(e.target.value)}),/*#__PURE__*/_jsx(\"div\",{id:\"emailHelp\",className:\"form-text\",children:\"\\u041D\\u0430 \\u0412\\u0430\\u0448\\u0443 \\u043F\\u043E\\u0447\\u0442\\u0443 \\u043F\\u0440\\u0438\\u0434\\u0435\\u0442 \\u043A\\u043E\\u0434 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",onClick:recoveryPassword,children:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"})]})})});};export default DontRememberPassword;","map":{"version":3,"names":["axios","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","DontRememberPassword","API_URL","process","env","REACT_APP_API_URL","emailData","setEmailData","navigate","recoveryPassword","e","preventDefault","email","post","state","error","status","alert","className","children","htmlFor","type","id","value","onChange","target","onClick"],"sources":["/home/los/Рабочий стол/Проги/support.rf/support_frontend/src/pages/DontRememberPassword.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/DontRememberPassword.css\"\n\nconst DontRememberPassword = () => {\n    const API_URL = process.env.REACT_APP_API_URL; \n    const [emailData, setEmailData] = useState(\"\");\n    const navigate = useNavigate();\n\n    async function recoveryPassword(e) {\n        e.preventDefault()\n        const email = emailData\n\n        try {\n            await axios.post(`${API_URL}/organizations/dont_remember_password?email=${email}`)\n            navigate(\"/verify_recovery_password_code\", { state: { email } });\n        }\n        catch(error) {\n            if (error.status === 404) {\n                alert(\"Пользователя с таким адресом не существует\");\n            }\n            else {\n                alert(\"Ошибка сервера. Попробуйте позже\");\n            }\n        }\n\n        setEmailData(\"\")\n    }\n\n    return (\n        <div className=\"dontRememberPasswordPage\">\n            <div className=\"dontRememberPasswordForm\">\n                <form>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email адрес</label>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            id=\"exampleInputEmail1\" \n                            aria-describedby=\"emailHelp\"\n                            value={emailData}\n                            onChange={e => setEmailData(e.target.value)}\n                        />\n                        <div id=\"emailHelp\" className=\"form-text\">На Вашу почту придет код подтверждения</div>\n                    </div>\n                    <button \n                        type=\"submit\" \n                        className=\"btn btn-primary\"\n                        onClick={recoveryPassword}\n                    >\n                        Отправить\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default DontRememberPassword;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,oCAAoC,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC7C,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,cAAe,CAAAa,gBAAgBA,CAACC,CAAC,CAAE,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,KAAK,CAAGN,SAAS,CAEvB,GAAI,CACA,KAAM,CAAAZ,KAAK,CAACmB,IAAI,CAAC,GAAGX,OAAO,+CAA+CU,KAAK,EAAE,CAAC,CAClFJ,QAAQ,CAAC,gCAAgC,CAAE,CAAEM,KAAK,CAAE,CAAEF,KAAM,CAAE,CAAC,CAAC,CACpE,CACA,MAAMG,KAAK,CAAE,CACT,GAAIA,KAAK,CAACC,MAAM,GAAK,GAAG,CAAE,CACtBC,KAAK,CAAC,4CAA4C,CAAC,CACvD,CAAC,IACI,CACDA,KAAK,CAAC,kCAAkC,CAAC,CAC7C,CACJ,CAEAV,YAAY,CAAC,EAAE,CAAC,CACpB,CAEA,mBACIT,IAAA,QAAKoB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,cACrCrB,IAAA,QAAKoB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,cACrCnB,KAAA,SAAAmB,QAAA,eACInB,KAAA,QAAKkB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjBrB,IAAA,UAAOsB,OAAO,CAAC,oBAAoB,CAACF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,sCAAW,CAAO,CAAC,cAC9ErB,IAAA,UACIuB,IAAI,CAAC,OAAO,CACZH,SAAS,CAAC,cAAc,CACxBI,EAAE,CAAC,oBAAoB,CACvB,mBAAiB,WAAW,CAC5BC,KAAK,CAAEjB,SAAU,CACjBkB,QAAQ,CAAEd,CAAC,EAAIH,YAAY,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CAC/C,CAAC,cACFzB,IAAA,QAAKwB,EAAE,CAAC,WAAW,CAACJ,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,6MAAsC,CAAK,CAAC,EACrF,CAAC,cACNrB,IAAA,WACIuB,IAAI,CAAC,QAAQ,CACbH,SAAS,CAAC,iBAAiB,CAC3BQ,OAAO,CAAEjB,gBAAiB,CAAAU,QAAA,CAC7B,wDAED,CAAQ,CAAC,EACP,CAAC,CACN,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAlB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}