{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      await callback();\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFetching, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");","map":{"version":3,"names":["useState","useFetching","callback","_s","isLoading","setIsLoading","error","setError","fetching","e","message"],"sources":["/home/los/Рабочий стол/Проги/support.rf/support_frontend/src/hooks/useFetching.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetching = async () => {\n        try {\n            setIsLoading(true);\n            await callback();\n        } catch (e) {\n            setError(e.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return [fetching, isLoading, error]\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACAH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMH,QAAQ,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOO,CAAC,EAAE;MACRF,QAAQ,CAACE,CAAC,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACNL,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACvC,CAAC;AAAAH,EAAA,CAhBYF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}